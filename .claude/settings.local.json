{
  "permissions": {
    "allow": [
      "Bash(yarn --version)",
      "Bash(node --version:*)",
      "Bash(yarn install)",
      "Bash(yarn npm info @nuxt/cli versions --json)",
      "Bash(yarn build)",
      "Bash(yarn npm info @nuxt/bridge@latest version)",
      "Bash(npm run build:plugin:*)",
      "Bash(yarn explain peer-requirements p8cb45e)",
      "Bash(yarn explain peer-requirements p4df380)",
      "Bash(yarn explain peer-requirements)",
      "Bash(yarn nuxi prepare)",
      "Bash(yarn dev)",
      "Bash(yarn generate)",
      "Bash(npx nuxi generate)",
      "Bash(npx nuxi prepare)",
      "Bash(cat node_modules/@nuxt/kit/dist/index.mjs)",
      "Bash(cat .yarnrc.yml)",
      "Bash(npx nuxt generate)",
      "Bash(cat sportnco_modules/ui-betslip/package.json)",
      "Bash(npm run build)",
      "Bash(cat package.json)",
      "Bash(curl -X POST http://localhost:5000/api/betslip/add )",
      "Bash(curl -v http://localhost:5000/api/betslip/stream)",
      "Bash(python3 -m json.tool echo \"\")",
      "Bash(curl -X POST http://localhost:5000/api/betslip/update-stake )",
      "Bash(node -p \"require(''./node_modules/vue/package.json'').version\")",
      "Bash(yarn why vue)",
      "Bash([ -d \"node_modules/vue\" ])",
      "Bash(npm run build:standalone)",
      "Bash(yarn config get nodeLinker)",
      "Bash(yarn why nuxt)",
      "Bash(yarn cache clean)",
      "Bash(volta --version)",
      "Bash(npm run type-check)",
      "Bash(yarn start)",
      "Bash(npx nuxt2 build)",
      "Bash(npx nuxt2 start)",
      "Bash(curl -N http://localhost:5000/api/betslip/stream)",
      "Bash(curl -N -m 5 http://localhost:5000/api/betslip/stream)",
      "Bash(npx nuxt2 dev)",
      "Bash(lsof -ti:5000)",
      "Bash(xargs kill -9)",
      "Bash(curl -s http://localhost:5000)",
      "Bash(pkill -f \"yarn install\")",
      "Bash(pkill -f \"yarn\")",
      "Bash(yarn install --mode update-lockfile)",
      "Bash(node -e \"const fs = require(''''fs''''); const content = fs.readFileSync(''''/Users/diego.maeoka/Desktop/tutorials/starter-2/sportnco_modules/ui-betslip/dist/betslip-widget.umd.js'''', ''''utf8''''); const match = content.match(/styles:\\[''''([^'''']+)''''\\]/); if (match) { const css = match[1].replace(/\\n/g, ''''\\n''''); console.log(css.substring(0, 1000)); }\")",
      "Bash(node -e \"const fs = require(''fs''); const content = fs.readFileSync(''/Users/diego.maeoka/Desktop/tutorials/starter-2/sportnco_modules/ui-betslip/dist/betslip-widget.umd.js'', ''utf8''); const match = content.match(/styles:\\[''([^'']+)''\\]/); if (match) { const css = match[1]; console.log(css.substring(200, 800)); }\")",
      "Bash(node -e \"const fs = require(''fs''); const content = fs.readFileSync(''/Users/diego.maeoka/Desktop/tutorials/starter-2/sportnco_modules/ui-betslip/dist/betslip-widget.umd.js'', ''utf8''); const match = content.match(/styles:\\[''([^'']+)''\\]/); if (match) { const css = match[1]; const idx = css.indexOf(''--tw-border-style''); console.log(css.substring(Math.max(0, idx - 50), idx + 150)); }\")",
      "Bash(node -e \"const fs = require(''fs''); const content = fs.readFileSync(''/Users/diego.maeoka/Desktop/tutorials/starter-2/sportnco_modules/ui-betslip/dist/betslip-widget.umd.js'', ''utf8''); const match = content.match(/styles:\\[''([^'']+)''\\]/); if (match) { const css = match[1]; const idx = css.indexOf('':host{--tw-border-style''); if (idx > 0) { console.log(''Found :host definition at position'', idx); console.log(css.substring(idx, idx + 100)); } else { console.log('':host definition not found''); } }\")",
      "Bash(curl -N -m 5 http://192.168.112.156:5000/api/betslip/stream)",
      "Bash(curl -X POST http://192.168.112.156:5000/api/betslip/add -H \"Content-Type: application/json\" -d '{\"\"bet\"\":{\"\"id\"\":\"\"test-123\"\",\"\"name\"\":\"\"Test Bet\"\",\"\"odds\"\":3.0,\"\"stake\"\":20}}')",
      "mcp__ide__executeCode",
      "Bash(sed -n '4130,4140p' /Users/diego.maeoka/Desktop/tutorials/starter-2/sportnco_modules/ui-betslip/dist/betslip-widget.es.js)",
      "Bash(yarn explain peer-requirements p36c674)",
      "Bash(yarn explain peer-requirements p9400f0)",
      "Bash(yarn run lint:eslint --help)"
    ],
    "deny": [],
    "ask": []
  }
}
